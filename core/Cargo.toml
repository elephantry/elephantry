[package]
name = "elephantry"
description = "Object model manager for PostgreSQL"
readme = "../docs/README.md"
keywords = ["database", "postgresql"]
categories = ["database"]
rust-version = "1.80"

version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

[dependencies]
bitflags = "2.0"
byteorder = "1.3"
bytes = "1.0"
libpq = "5.0"
log = "0.4"
regex = "1.3"
thiserror.workspace = true
tuple_len = "3.0"

[dependencies.arbitrary]
version = "1.0"
features = ["derive"]
optional = true

[dependencies.bit-vec]
version = "0.8"
optional = true

[dependencies.bigdecimal]
version = "0.4"
optional = true

[dependencies.num]
version = "0.4"
optional = true

[dependencies.chrono]
version = "0.4.23"
default-features = false
features = ["clock", "std"]
optional = true

[dependencies.config]
version = "0.15"
optional = true

[dependencies.jiff]
version = "0.1"
default-features = false
features = ["std"]
optional = true

[dependencies.ipnetwork]
version = "0.21"
optional = true

[dependencies.macaddr]
version = "1.0.0"
optional = true

[dependencies.elephantry-derive]
version = "4.0"
path = "../derive"

[dependencies.geo-types]
version = "0.7.8"
optional = true

[dependencies.postgres_money]
version = "0.4"
optional = true

[dependencies.r2d2]
version = "0.8"
optional = true

[dependencies.rocket_sync_db_pools]
version = "0.1"
optional = true

[dependencies.serde]
version = "1.0"
optional = true
features = ["derive"]

[dependencies.serde_json]
version = "1.0"
optional = true

[dependencies.time]
version = "0.3"
features = ["macros", "parsing"]
optional = true

[dependencies.uuid]
version = "1.0"
optional = true

[dependencies.xmltree]
version = "0.11"
optional = true

[dev-dependencies]
serde_json = "1.0"
uuid = "1.0"
env_logger = "0.11"

[dev-dependencies.async-std]
version= "1.6"
features = ["attributes"]

[features]
default = []
all-types = [
    "bit",
    "date",
    "geo",
    "json",
    "ltree",
    "money",
    "net",
    "numeric",
    "time",
    "uuid",
    "xml"
]
bit = ["bit-vec", "elephantry-derive/bit"]
config = ["dep:config", "serde"]
chrono = ["dep:chrono", "elephantry-derive/chrono"]
date = ["chrono"]
geo = ["geo-types", "elephantry-derive/geo"]
inspect = []
jiff = ["dep:jiff", "elephantry-derive/jiff"]
json = ["serde_json", "elephantry-derive/json"]
ltree = ["elephantry-derive/ltree"]
money = ["postgres_money", "elephantry-derive/money"]
multirange = ["libpq/v14", "elephantry-derive/multirange"]
net = ["ipnetwork", "macaddr", "elephantry-derive/net"]
numeric = ["bigdecimal", "num", "elephantry-derive/numeric"]
pg14 = ["libpq/v14", "multirange"]
pg16 = ["libpq/v16"]
pg17 = ["libpq/v17"]
rocket = ["r2d2", "rocket_sync_db_pools"]
serde = ["dep:serde", "time/serde"]
time = ["dep:time", "elephantry-derive/time"]
uuid = ["dep:uuid", "elephantry-derive/uuid"]
xml = ["xmltree", "elephantry-derive/xml"]

[[example]]
name = "00-config"
required-features = ["config"]
doc-scrape-examples = true

[[example]]
name = "02-query"
required-features = ["date", "numeric"]
doc-scrape-examples = true

[[example]]
name = "03-read"
required-features = ["date", "numeric"]
doc-scrape-examples = true

[[example]]
name = "04-write"
required-features = ["date", "numeric"]
doc-scrape-examples = true

[[example]]
name = "05-extra"
required-features = ["date", "numeric"]
doc-scrape-examples = true

[[example]]
name = "06-complex"
required-features = ["date", "numeric"]
doc-scrape-examples = true

[[example]]
name = "07-relations"
required-features = ["date", "numeric"]
doc-scrape-examples = true

[[example]]
name = "08-composite"
required-features = ["date", "numeric"]
doc-scrape-examples = true

[[example]]
name = "09-async"
required-features = ["date", "numeric"]
doc-scrape-examples = true

[[example]]
name = "10-transaction"
required-features = ["date", "numeric"]
doc-scrape-examples = true

[[example]]
name = "11-notification"
doc-scrape-examples = true

[[example]]
name = "12-copy"
required-features = ["date", "numeric"]
doc-scrape-examples = true

[package.metadata.docs.rs]
all-features = true
cargo-args = ["-Zunstable-options", "-Zrustdoc-scrape-examples"]
rustdoc-args = ["--cfg", "docsrs"]
